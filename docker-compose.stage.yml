version: "3.9"

services:
  # Nginx Proxy Manager
  nginx-proxy-manager:
    image: 'jc21/nginx-proxy-manager:latest'
    restart: unless-stopped
    ports:
      - '80:80'        # HTTP (标准端口)
      - '443:443'      # HTTPS (标准端口)
      - '81:81'        # Admin UI
    volumes:
      - ./jc21/data:/data
      - ./jc21/letsencrypt:/etc/letsencrypt
    networks:
      - internal
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:81"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Database for Nginx Proxy Manager
  nginx-proxy-manager-db:
    image: 'jc21/mariadb-aria:latest'
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: 'npm'
      MYSQL_DATABASE: 'npm'
      MYSQL_USER: 'npm'
      MYSQL_PASSWORD: 'npm'
    volumes:
      - ./jc21/data/mysql:/var/lib/mysql
    networks:
      - internal
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgreSQL Database
  db:
    image: postgres:15
    restart: always
    env_file:
      - .env.stage.directus
    environment:
      POSTGRES_DB: directus
    volumes:
      - ./db_data:/var/lib/postgresql/data
    networks:
      - internal
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U directus"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Directus CMS
  directus:
    image: directus/directus:11.8
    restart: always
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env.stage.directus
    volumes:
      - ./directus/uploads:/directus/uploads
      - ./directus/extensions:/directus/extensions
      - ./directus/schemas:/directus/schemas
    ports:
      - "8055:8055"
    networks:
      - internal
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://127.0.0.1:8055/"]
      interval: 60s
      timeout: 30s
      retries: 5
      start_period: 120s

  # API Server
  api:
    build:
      context: .
      dockerfile: api-server/Dockerfile
    restart: always
    depends_on:
      - directus
    env_file:
      - .env.stage.api
    ports:
      - "3000:3000"
    networks:
      - internal
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    image: nginx:alpine
    volumes:
      - ./frontend/dist:/usr/share/nginx/html:ro
      # 开发环境：使用无缓存配置
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      # 生产环境：使用有缓存配置（取消注释下面这行，注释上面这行）
      # - ./frontend/nginx.prod.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - "5173:5173"
    networks:
      - internal

networks:
  internal:
    driver: bridge 
