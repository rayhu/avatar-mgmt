# Azure Kubernetes Service Deployment
# This is the recommended approach for production

apiVersion: apps/v1
kind: Deployment
metadata:
  name: avatar-mgmt-api
spec:
  replicas: 2
  selector:
    matchLabels:
      app: avatar-mgmt-api
  template:
    metadata:
      labels:
        app: avatar-mgmt-api
    spec:
      containers:
      - name: api
        image: your-registry.azurecr.io/avatar-mgmt-api:latest
        ports:
        - containerPort: 3000
        env:
        - name: NODE_ENV
          value: "production"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: connection-string
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
---
apiVersion: v1
kind: Service
metadata:
  name: avatar-mgmt-api-service
spec:
  selector:
    app: avatar-mgmt-api
  ports:
  - protocol: TCP
    port: 80
    targetPort: 3000
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: avatar-mgmt-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  tls:
  - hosts:
    - your-domain.com
    secretName: avatar-mgmt-tls
  rules:
  - host: your-domain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: avatar-mgmt-api-service
            port:
              number: 80 
