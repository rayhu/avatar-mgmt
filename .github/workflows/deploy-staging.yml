# .github/workflows/deploy-staging.yml
name: Deploy to Staging
on:
  workflow_run:
    workflows: ['Build and Push Docker Images']
    types:
      - completed
    branches: [main]

jobs:
  deploy-staging:
    # 只在构建工作流成功完成后执行
    if: github.event.workflow_run.conclusion == 'success'

    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Staging
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ vars.STAGING_HOST }}
          username: ${{ vars.STAGING_USERNAME }}
          key: ${{ secrets.STAGING_SSH_KEY }}
          script: |
            echo "🚀 Starting Staging deployment..."
            echo "Target: ${{ vars.STAGING_HOST }}"
            echo "User: ${{ vars.STAGING_USERNAME }}"
            echo "Repository: ${{ github.event.workflow_run.repository.full_name }}"
            echo "Branch: ${{ github.event.workflow_run.head_branch }}"
            echo "Commit: ${{ github.event.workflow_run.head_sha }}"
            echo "Deploy time: $(date)"

            # 下载部署脚本
            curl -o .github/scripts/init-server.sh https://raw.githubusercontent.com/rayhu/avatar-mgmt/main/.github/scripts/init-server.sh
            curl -o .github/scripts/deploy-ghcr-simple.sh https://raw.githubusercontent.com/rayhu/avatar-mgmt/main/.github/scripts/deploy-ghcr-simple.sh

            # 初始化服务器
            chmod +x .github/scripts/init-server.sh
            .github/scripts/init-server.sh

            # 部署应用
            chmod +x .github/scripts/deploy-ghcr-simple.sh
            export GITHUB_REPOSITORY="${{ github.event.workflow_run.repository.full_name }}"
            export GITHUB_TOKEN="${{ secrets.GITHUB_TOKEN }}"
            export GITHUB_ACTOR="${{ github.actor }}"
            export GITHUB_REF_NAME="${{ github.event.workflow_run.head_branch }}"
            export GITHUB_SHA="${{ github.event.workflow_run.head_sha }}"
            export STAGING_HOST="${{ vars.STAGING_HOST }}"
            export IMAGE_TAG="latest"
            .github/scripts/deploy-ghcr-simple.sh

            echo "🔍 Starting health check..."

            # 设置环境变量并执行健康检查脚本
            export DOCKER_COMPOSE_FILE="docker-compose.stage.yml"
            chmod +x .github/scripts/health-check.sh
            .github/scripts/health-check.sh

      - name: Notify deployment success
        if: success()
        run: |
          echo "✅ Staging deployment successful!"
          echo "Repository: ${{ github.event.workflow_run.repository.full_name }}"
          echo "Branch: ${{ github.event.workflow_run.head_branch }}"
          echo "Commit: ${{ github.event.workflow_run.head_sha }}"
          echo "Deploy time: $(date)"

      - name: Notify deployment failure
        if: failure()
        run: |
          echo "❌ Staging deployment failed!"
          echo "Repository: ${{ github.event.workflow_run.repository.full_name }}"
          echo "Branch: ${{ github.event.workflow_run.head_branch }}"
          echo "Commit: ${{ github.event.workflow_run.head_sha }}"
          echo "Deploy time: $(date)"
